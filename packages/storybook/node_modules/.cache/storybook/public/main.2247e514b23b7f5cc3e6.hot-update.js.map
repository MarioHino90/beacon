{"version":3,"file":"main.2247e514b23b7f5cc3e6.hot-update.js","sources":["webpack:///../core/src/components/Menu/Menu.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { css } from \"styled-components\";\nimport classNames from \"classnames\";\nimport { Transition, TransitionStatus } from \"react-transition-group\";\n\nimport { Popper, usePopper } from \"../Popper\";\n\nimport { MenuProps } from \"./types\";\nimport { StyledMenu, popperOverrides } from \"./StyledMenu\";\nimport { useMenuA11y } from \"./useMenuA11y\";\n\n/**\n * A function that abstracts the open/close logic of a menu component\n * @param targetRef an optional ref object that should be used instead of initializing a new one\n * @param initialState an optional initial state for the handler\n * @returns an array containing state management props for the menu as its first element and the ref object to be passed to both the target and the menu\n * @note this function renames usePopper to provide a consistent point of entry and simplify the cognitive overhead for the developer\n */\nexport const useMenu = usePopper;\n\nconst duration = 300;\nconst defaultStyle = {\n  transition: `opacity ${duration}ms ease-in-out`,\n  opacity: 0,\n};\nconst transitionStyles: {\n  [key in TransitionStatus]?: React.CSSProperties;\n} = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 },\n};\n\nexport const Menu = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      closeOnClickInside,\n      id,\n      isOpen,\n      hideTopMargin,\n      onClose,\n      onOpen,\n      popperClassName,\n      popperId,\n      popperStyledCss,\n      size = \"lg\",\n      style,\n      styledCss,\n      target,\n      targetRef,\n      variant = \"default\",\n      ...props\n    }: MenuProps,\n    ref: React.RefObject<HTMLDivElement>\n  ): React.ReactElement => {\n    // create a ref for the menu\n    const menuRef = useRef<HTMLUListElement>(null);\n    // use the menu a11y hook to manage a11y behavior\n    const activeDescendantId = useMenuA11y(menuRef, {\n      isOpen,\n      onClose,\n      onOpen,\n      target,\n      targetRef,\n    });\n\n    const renderTransition = (\n      children: React.ReactNode | React.ReactNode[]\n    ) => {\n      return (\n        <Transition in={isOpen} timeout={duration} appear>\n          {(state) => (\n            <StyledMenu\n              className={classNames([\"bcl-menu\", className])}\n              id={id}\n              style={{ ...style, ...defaultStyle, ...transitionStyles[state] }}\n              styledCss={styledCss}\n              ref={menuRef}\n              tabIndex={-1}\n              aria-labelledby={props[\"aria-labelledby\"]}\n              aria-activedescendant={activeDescendantId}\n              onClick={closeOnClickInside ? onClose : undefined}\n              size={size}\n              hideTopMargin={hideTopMargin}\n              variant={variant}\n            >\n              {children}\n            </StyledMenu>\n          )}\n        </Transition>\n      );\n    };\n\n    return (\n      <Popper\n        triggers={[\"click\"]}\n        untriggers={[\"click\"]}\n        {...props}\n        ref={ref}\n        className={popperClassName}\n        id={popperId}\n        isOpen={isOpen}\n        interactive\n        noArrow\n        popperStyledCss={css`\n          ${popperOverrides}${popperStyledCss || \"\"}\n        `}\n        target={target}\n        targetRef={targetRef}\n        onClose={onClose}\n        onOpen={onOpen}\n        style={hideTopMargin ? { borderTop: 0 } : undefined}\n      >\n        {typeof children === \"function\" ? (\n          ({ activePlacement, targetDimensions, popperDimensions }) => (\n            <Transition in={isOpen} timeout={duration} appear>\n              {(state) => (\n                <StyledMenu\n                  className={classNames([\"bcl-menu\", className])}\n                  id={id}\n                  style={{\n                    ...style,\n                    ...defaultStyle,\n                    ...transitionStyles[state],\n                  }}\n                  styledCss={styledCss}\n                  ref={menuRef}\n                  tabIndex={-1}\n                  aria-labelledby={props[\"aria-labelledby\"]}\n                  aria-activedescendant={activeDescendantId}\n                  onClick={closeOnClickInside ? onClose : undefined}\n                  size={size}\n                  hideTopMargin={hideTopMargin}\n                  variant={variant}\n                >\n                  {children({\n                    activePlacement,\n                    targetDimensions,\n                    popperDimensions,\n                  })}\n                </StyledMenu>\n              )}\n            </Transition>\n          )\n        ) : (\n          <Transition in={isOpen} timeout={duration} appear>\n            {(state) => (\n              <StyledMenu\n                className={classNames([\"bcl-menu\", className])}\n                id={id}\n                style={{\n                  ...style,\n                  ...defaultStyle,\n                  ...transitionStyles[state],\n                }}\n                styledCss={styledCss}\n                ref={menuRef}\n                tabIndex={-1}\n                aria-labelledby={props[\"aria-labelledby\"]}\n                aria-activedescendant={activeDescendantId}\n                onClick={closeOnClickInside ? onClose : undefined}\n                size={size}\n                hideTopMargin={hideTopMargin}\n                variant={variant}\n              >\n                {children}\n              </StyledMenu>\n            )}\n          </Transition>\n        )}\n      </Popper>\n    );\n  }\n);\n\nMenu.displayName = \"Menu\";\n"],"mappingseA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAuBA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}