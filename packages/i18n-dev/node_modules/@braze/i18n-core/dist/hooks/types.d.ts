import type { i18n as I18n } from "i18next";
import type { UseTranslationOptions } from "react-i18next";
import type { NamespaceKeys, TranslationKeys, TranslationKeysWithoutArguments, KeyFunction, TranslationKeysWithArguments } from "../types";
export interface UseI18nNamespaceTranslate<TranslationMap, Namespace extends NamespaceKeys<TranslationMap>> {
    <TranslationKey extends TranslationKeysWithoutArguments<TranslationMap, Namespace>, Options extends TranslationMap[Namespace][TranslationKey]>(key: TranslationKey, defaultValue: string): string;
    <TranslationKey extends TranslationKeysWithArguments<TranslationMap, Namespace>>(key: TranslationKey, defaultValue: string, options: TranslationMap[Namespace][TranslationKey]): string;
    <TranslationKey extends TranslationKeys<TranslationMap, Namespace>, Options extends TranslationMap[Namespace][TranslationKey]>(key: TranslationKey, defaultValue: string, options?: Options): string;
}
export interface UseI18nNamespaceReturn<TranslationMap, Namespace extends NamespaceKeys<TranslationMap>> {
    i18n: I18n;
    t: UseI18nNamespaceTranslate<TranslationMap, Namespace>;
    k: KeyFunction<TranslationMap, Namespace>;
}
export declare type UseI18nNamespace<TranslationMap> = <Namespace extends NamespaceKeys<TranslationMap>>(ns: Namespace, options?: UseTranslationOptions) => UseI18nNamespaceReturn<TranslationMap, Namespace>;
