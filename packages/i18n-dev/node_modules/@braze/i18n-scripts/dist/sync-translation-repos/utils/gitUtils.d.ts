/**
 * checks if there were changes to the files in git
 *
 * @returns a promise that resolves to true if there were changes, false otherwise
 */
export declare const checkIfGitChanges: () => Promise<boolean>;
/**
 * resets current branch, clearing untracked files and resetting tracked ones
 *
 * @param repoPaths the string paths to the translations folders
 *
 * @returns a promise that resolves when reset is complete
 */
export declare const resetCurrentBranch: (repoPaths: string[]) => Promise<void>;
/**
 * cleans up local branches
 *
 * @param branchName the name of the branch to clean up
 * @param baseBranch the base branch to return to
 * @returns a promise that resolves when clean up is done
 */
export declare const cleanBranches: (branchName: string, baseBranch: string) => Promise<void>;
/**
 * cleans and reset branches on error
 *
 * @param branchName the name of the branch to clean up
 * @param baseBranch the base branch to return to
 * @param repoPaths the string paths to the translations folders
 *
 * @returns a promise that resolves when clean up is done
 */
export declare const cleanBranchesOnError: (branchName: string, baseBranch: string, repoPaths: string[]) => Promise<void>;
/**
 * checkouts a new branch based on main
 *
 * @param branchName the name of the branch to create
 * @param baseBranch the base branch to checkout
 */
export declare const checkoutBranch: (branchName: string, baseBranch: string) => Promise<void>;
