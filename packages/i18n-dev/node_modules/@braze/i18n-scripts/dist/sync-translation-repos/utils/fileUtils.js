"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.globp = exports.createDirectory = void 0;
const fs_1 = require("fs");
const glob_1 = __importDefault(require("glob"));
const path_1 = __importDefault(require("path"));
/**
 * creates a directory if it does not already exist
 *
 * @param dir the directory to create
 * @returns a promise that resolves with the command is done
 */
const createDirectory = (dir) => new Promise((resolve, reject) => {
    if (!(0, fs_1.existsSync)(path_1.default.resolve(dir))) {
        fs_1.promises.mkdir(dir, { recursive: true }).then(resolve).catch(reject);
    }
    else {
        resolve(null);
    }
});
exports.createDirectory = createDirectory;
/**
 * The glob function but using promises instead of callbacks
 *
 * @param pattern the glob pattern
 * @param options the options for glob
 *
 * @returns a promise that returns the files found
 */
const globp = (pattern, options = {}) => new Promise((resolve, reject) => {
    (0, glob_1.default)(pattern, options, (err, files) => {
        if (err) {
            reject(err);
        }
        resolve(files);
    });
});
exports.globp = globp;
//# sourceMappingURL=fileUtils.js.map